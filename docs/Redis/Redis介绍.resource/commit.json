{"compress":true,"commitItems":[["7ef486e9-df69-4284-a111-77a209248b72",1653531107447,"",[[1653531104574,["mac@macdeMacBook-Pro.local",[[1,0,"# Redis介绍\n\n\n\n"]],[0,0],[12,12]]],[1653531105969,["mac@macdeMacBook-Pro.local",[[1,0,"## Nosql的概念 ##\n> NOSQL概念在09年被提出来，NoSQL最常见的解释是\"non-relational\",也就是非关系，Not Only SQL也被很多人接收。\n\n> NoSQL现在一般理解成非关系型数据库\n\nNoSql的优势\n\t1.易拓展\n\t2.大数据量，高性能\n\t3.灵活的数据模型\n\n\n#"],[-1,7,"介绍"],[1,9,"\n1. Redis 是一个开源的，内存中的数据结构存储系统，他可以用作数据库 缓存和消息中间件，它支持多种类型的数据结构 如字符串（string） 散列（hashes） 列表（lists） 集合（sets） 有序集合（sorted sets) 等数据类\n2. Redis数据都是缓存在内存中，redis会周期性的把更新的数据写入磁盘或者把修改操作写入追加到记录文件中\n\n\n## Redis 常用的基本命令 ##\n\n1. 启动Redis服务器端\n\t> redis-cli\n2. 关闭Redis服务器端\n\t> redis-cli shutdown\n\n\t1.删除键 del 键名 （返回的是删除的行数） 如果不存在返回0\n\t\n\t2.查找所有符合给定模式pattern 的key \n\t\t\tkeys * 匹配数据库中所有的key\n\t\t\tkeys h?llo 匹配hello 或者hallo 其他等\n\t\t\tkeys h*llo 匹配hllo 或和heeeello 等\n\t\t\tkeys h[ae]llo 匹配hello 和hallo 不匹配其他"],[1,11,"\t\t\t特殊符号用\\隔开\n\t\t\tKEYS 的速度非常快，但在一个大的数据库中使用它仍然可能造成性能问题，如\n\t\t\t果你需要从一个数据集中查找特定的 key ，你最好还是用 Redis 的集合结构(set)来代替。\n\t\t\t\n\t3.从当前数据库中随机返回一个key\n\t\trandomkey\n\t\t\t\t当数据库不为空时返回一个key\n\t\t\t\t当数据库为空时返回nil\n\t4.ttl以秒为单位 返回给定key的剩余生存时间（pttl 是以毫秒）\n\t\t\t当 key 不存在时，返回 -2 。\n\t\t\t当 key 存在但没有设置剩余生存时间时，返回 -1 。\n\t\t\t否则，以秒为单位，返回 key 的剩余生存时间。\n\t5.exists 检测给定的key是否存在 若存在返回1 不存咋返回0\n\n\t6.move 将当前数据库的key移动到给定的数据库db当中\n\t\t如果当前数据库和给定数据库有相同的key 那么move没效果成功返回1\n\t\t失败返回0\n\t\t\t\n\t7.type 返回指定key 的类型\n\t8.expire 指定key 生存时间 当\tkey过期时会自动被删除 其生存时间不受rename 或者 其他影响 除非用key重新设置生存时间\n\t9.pexpire 用毫秒指定key生存时间\n\t10.persist 移除一个键的生命周期 使其变成永久\n\t11.ping 检查连接状态\n\n\n## Redis常用命令对应的php方法 ##\n\t1.$redis = new Redis(); 声明一个Redis对象\n\t\t$redis->connect('localhost',6379);连接到一个Redis实例\n\t\t$redis->close() 关闭一个redis实例\n\t2.$redis->ping();\n\t\t查看当前连接实例的状态，成功返回PONG 失败跑出一个RedisExperison异常\n\t3.$redis->del();\n\t\t\t删除指定的一个键 成功返回1 失败返回0\n\t4.$redis->keys()\n\t\t\t返回所有键的值或者筛选条件的值(数组)\n\t5.$redis->select('0');\n\t\t选择数据库 成功返回bool值true 失败返回false\n\t6.$redis->move('name2',1);\n\t\t移动一个key-value 到另外一个db 返回bool值\n\t7.取得一个key的生存时间 如果不存在返回-2 没有设置返回-1 \n\t\t\tvar_dump($redis->ttl('name1'));\n\t8.删除一个key的生命周期设置 返回bool\n\t\t\tvar_dump($redis->persist('name1'));\n\t9.设置一个key的生命周期\n\t\t\tvar_dump($redis->expire('name1','1000'));\n\t10.查看一个key的类型 返回对应的类型\n\t\t\techo  $redis->type('lin');\n\t11.查看一个key是否存在 返回bool\n\t\t\tvar_dump($redis->exists('name2121'));\n\n\t\n\t\t\t"]],[0,13],[1938,1938]]]],null,"mac@macdeMacBook-Pro.local"]]}